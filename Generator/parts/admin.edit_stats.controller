/*
* Edit stats of %elementsName%
*/

// By default no stats
if (!$game->get('%elementsName%Stats')) {
    $game->set('%elementsName%Stats', []);
}

// Updating stats
if ($request->get('%elementsName%Stats')) {
    $game->set('%elementsName%Stats', $request->get('%elementsName%Stats'));
}

// Creating a new stat
if ($request->get('newStat')) {
    $gameStats = $game->get('%elementsName%Stats');
    $gameStats[] = $request->get('newStat');
    $game->set('%elementsName%Stats', $gameStats);
}

// Delete a stat
if ($request->get('remove%elementName%Stat')) {
    $gameStats = $game->get('%elementsName%Stats');
    $newStats = [];
    foreach ($gameStats as $stat) {
        if ($stat->name != $request->get('remove%elementName%Stat')['name']) {
            $newStats[] = $stat;
        }
    }

    $game->set('%elementsName%Stats', $newStats);
}

// Apply default stats to all elements
$gameStats = $arrayReturn['%elementsName%Stats'] = $game->get('%elementsName%Stats');

$elements = $game->getElementsByProperties(['type' => '%elementName%']);
foreach ($gameStats as $stat) {
    foreach ($elements as $element) {
        if (!$element->get($stat->name)) {
            $element->set($stat->name, (int) $stat->quantity);
        }
        if ($request->get('remove%elementName%Stat')) {
            $element->removeProperty($request->get('remove%elementName%Stat')['name']);
        }
    }
}
